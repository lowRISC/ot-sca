device:
  fpga_bitstream: ../cw/objs/lowrisc_systems_chip_earlgrey_cw310_0.1_kmac_dom.bit
  force_program_bitstream: False
  fw_bin: ../cw/objs/kmac_serial_fpga_cw310.bin
  # The clock frequency of the target block is equal to
  # pll_frequency * target_clk_mult. pll_frequency is controllable via
  # ChipWhisperer API, whereas target_clk_mult is baked into the FPGA
  # bitstream.
  pll_frequency: 100000000
  target_clk_mult: 0.1
  baudrate: 115200
capture:
  key_len_bytes: 16
  plain_text_len_bytes: 16
  output_len_bytes: 32
  # Number of target clock cycles per trace - KMAC is doing 24 or 96 cycles
  # for the key absorb w/o or w/ DOM, respectively, as well as 23 cycles for
  # XORing the key into the state.
  # w/o DOM
  #num_cycles: 80
  # w/ DOM
  num_cycles: 160
  # Offset in target clock cycles - During the first activity block, KMAC
  # just absorbs the fixed prefix (23 cycles XORing + 24 or 96 cycles
  # absorbing w/o or w/ DOM, respectively). This first activity block can be
  # skipped
  # w/o DOM
  #offset_cyles: 43
  # w/ DOM
  offset_cycles: 115
  # 32-bit seed for SW key masking. Key masks are generated using an LFSR.
  # For unprotected implemetation, lfsr_seed should be set to 0. This will
  # effectively switch off the masking. For masked implementation, any seed
  # other than 0 should be used.
  # w/o DOM
  #lfsr_seed: 0
  # w/ DOM
  lfsr_seed: 0xdeadbeef
  batch_prng_seed: 0
  scope_gain: 26
  num_traces: 5000
  project_name: projects/opentitan_simple_kmac
  waverunner_ip: 192.168.1.228
plot_capture:
  show: true
  num_traces: 100
  trace_image_filename: projects/sample_traces_kmac.html
