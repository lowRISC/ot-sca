device:
  fpga_bitstream: ../cw/objs/lowrisc_systems_chip_earlgrey_cw310_0.1_ecdsa.bit
  force_program_bitstream: False
  fw_bin: ../cw/objs/otbn_vertical_serial_fpga_cw310.bin
  # The clock frequency of the target block is equal to
  # pll_frequency * target_clk_mult. pll_frequency is controllable via
  # ChipWhisperer API, whereas target_clk_mult is baked into the FPGA
  # bitstream.
  # For non-batch mode max. 91 MHz, otherwise serial communication fails
  pll_frequency: 91000000
  target_clk_mult: 0.1
  baudrate: 115200
capture:
  # Currently, 'p256' is the only supported curve.
  curve: p256
  # Select the OTBN app to analyze. Currently available: 'keygen', 'modinv'
  app: keygen
  # These byte-lengths are passed to the chipwhisperer key/plaintext generator.
  # Since this is not encryption, they don't correspond to key/plaintext, but
  # rather seed/mask.
  use_fixed_key_iter: False # See https://github.com/lowRISC/ot-sca/issues/116
  # There are two fixed-vs-random test types, KEY and SEED
  # Currently batch-mode capture only works with SEED
  test_type: KEY
  key_len_bytes: 40
  plain_text_len_bytes: 40
  masks_off: false
  # Output length (most likely unused).
  output_len_bytes: 40
  # Fifo Size is 131070 = max num samples to avoid multiple runs per trace
  num_cycles: 200
  offset_cycles: 0
  # scope gain in db
  scope_gain: 24
  num_traces: 50000
  batch_prng_seed: 6
  project_name: projects/opentitan_otbn_vertical_keygen
  waverunner_ip: 192.168.1.228
  # As OTBN operations are long, we may need to overwrite the following
  # parameters.
  adc_mul: 1
  decimate: 1
plot_capture:
  show: true
  num_traces: 1
  trace_image_filename: projects/sample_traces_ecdsa_keygen.html
